/*
	Microsoft Dynamics AX for Retail POS Upgrade Database Script
	DbVersion: 6.2.4.0
*/

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[CUSTTABLE]') AND name = N'I_CUSTTABLE_11_1102626971__K71_K1')
DROP INDEX [I_CUSTTABLE_11_1102626971__K71_K1] ON [dbo].[CUSTTABLE] WITH ( ONLINE = OFF )
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIRPARTYTABLE]') AND name = N'I_DIRPARTYTABLE_11_1591728773__K14_K1')
DROP INDEX [I_DIRPARTYTABLE_11_1591728773__K14_K1] ON [dbo].[DIRPARTYTABLE] WITH ( ONLINE = OFF )
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSELECTRONICADDRESS]') AND name = N'I_LOGISTICSELECTRONICADDRESS_11_128771566__K1_K4_K10')
DROP INDEX [I_LOGISTICSELECTRONICADDRESS_11_128771566__K1_K4_K10] ON [dbo].[LOGISTICSELECTRONICADDRESS] WITH ( ONLINE = OFF )
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSPOSTALADDRESS]') AND name = N'I_LOGISTICSPOSTALADDRESS_11_1168775271__K1_K16')
DROP INDEX [I_LOGISTICSPOSTALADDRESS_11_1168775271__K1_K16] ON [dbo].[LOGISTICSPOSTALADDRESS] WITH ( ONLINE = OFF )
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSPOSTALADDRESS]') AND name = N'I_LOGISTICSPOSTALADDRESS_ADDRESS')
DROP INDEX [I_LOGISTICSPOSTALADDRESS_ADDRESS] ON [dbo].[LOGISTICSPOSTALADDRESS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_LOGISTICSPOSTALADDRESS_ADDRESS] ON [dbo].[LOGISTICSPOSTALADDRESS] 
(
	[ADDRESS] ASC,
	[VALIDFROM] ASC,
	[VALIDTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 70) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSPOSTALADDRESS]') AND name = N'I_LOGISTICSPOSTALADDRESS_LOCATION')
DROP INDEX [I_LOGISTICSPOSTALADDRESS_LOCATION] ON [dbo].[LOGISTICSPOSTALADDRESS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_LOGISTICSPOSTALADDRESS_LOCATION] ON [dbo].[LOGISTICSPOSTALADDRESS] 
(
	[LOCATION] ASC
)
WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 70) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSELECTRONICADDRESS]') AND name = N'I_LOGISTICSELECTRONICADDRESS_LOCATION')
DROP INDEX [I_LOGISTICSELECTRONICADDRESS_LOCATION] ON [dbo].[LOGISTICSELECTRONICADDRESS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_LOGISTICSELECTRONICADDRESS_LOCATION] ON [dbo].[LOGISTICSELECTRONICADDRESS] 
(
	[LOCATION] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOGISTICSELECTRONICADDRESS]') AND name = N'I_LOGISTICSELECTRONICADDRESS_LOCATOR')
DROP INDEX [I_LOGISTICSELECTRONICADDRESS_LOCATOR] ON [dbo].[LOGISTICSELECTRONICADDRESS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_LOGISTICSELECTRONICADDRESS_LOCATOR] ON [dbo].[LOGISTICSELECTRONICADDRESS] 
(
	[LOCATOR] ASC,
	[VALIDFROM] ASC,
	[VALIDTO] ASC,
	[TYPE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[CUSTTABLE]') AND name = N'I_CUSTTABLE_ACCOUNTNUMORGID')
DROP INDEX [I_CUSTTABLE_ACCOUNTNUMORGID] ON [dbo].[CUSTTABLE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_CUSTTABLE_ACCOUNTNUMORGID] ON [dbo].[CUSTTABLE] 
(
	[ACCOUNTNUM] ASC,
	[ORGID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[CUSTTABLE]') AND name = N'I_CUSTTABLE_PARTY')
DROP INDEX [I_CUSTTABLE_PARTY] ON [dbo].[CUSTTABLE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_CUSTTABLE_PARTY] ON [dbo].[CUSTTABLE] 
(
	[PARTY] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIRPARTYTABLE]') AND name = N'I_DIRPARTYTABLE_NAME')
DROP INDEX [I_DIRPARTYTABLE_NAME] ON [dbo].[DIRPARTYTABLE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_DIRPARTYTABLE_NAME] ON [dbo].[DIRPARTYTABLE] 
(
	[RECID] ASC,
	[NAME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIRPARTYLOCATION]') AND name = N'I_DIRPARTYLOCATION_ISLOCATIONOWNER')
DROP INDEX [I_DIRPARTYLOCATION_ISLOCATIONOWNER] ON [dbo].[DIRPARTYLOCATION] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_DIRPARTYLOCATION_ISLOCATIONOWNER] ON [dbo].[DIRPARTYLOCATION] 
(
	[PARTY] ASC,
	[ISPOSTALADDRESS] ASC,
	[LOCATION] ASC,
	[VALIDFROM] ASC,
	[VALIDTO] ASC,
	[ISPRIMARY] ASC,
	[ISPRIVATE] ASC	
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DIRPARTYLOCATION]') AND name = N'I_DIRPARTYLOCATION_PARTY')
DROP INDEX [I_DIRPARTYLOCATION_PARTY] ON [dbo].[DIRPARTYLOCATION] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [I_DIRPARTYLOCATION_PARTY] ON [dbo].[DIRPARTYLOCATION] 
(
	[PARTY] ASC,
	[LOCATION] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GETPARTYBYCUSTOMER]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GETPARTYBYCUSTOMER]
GO

CREATE FUNCTION [dbo].[GETPARTYBYCUSTOMER]
(
	@SEARCHVALUE	NVARCHAR(50)
)
RETURNS TABLE
AS
RETURN
(
	SELECT T1.PARTY
		FROM CUSTTABLE T1
	WHERE
		T1.ACCOUNTNUM LIKE @SEARCHVALUE + '%'
		OR
		T1.ORGID LIKE @SEARCHVALUE + '%'
	UNION
	SELECT T2.RECID
		FROM DIRPARTYTABLE T2
	WHERE
		T2.NAME LIKE '%' + @SEARCHVALUE + '%'
)

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GETPARTYBYADDRESS]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GETPARTYBYADDRESS]
GO

CREATE FUNCTION [dbo].[GETPARTYBYADDRESS]
(
	@SEARCHVALUE	NVARCHAR(250)
)
RETURNS TABLE
AS
RETURN
(
	SELECT T1.RECID AS PARTY
	FROM LOGISTICSPOSTALADDRESS T3
		INNER JOIN DIRPARTYLOCATION T2
			ON T3.LOCATION = T2.LOCATION 
		INNER JOIN  DIRPARTYTABLE T1
			ON T2.PARTY = T1.RECID
	WHERE
		T3.VALIDFROM <= GETUTCDATE() AND T3.VALIDTO >= GETUTCDATE()
		AND T3.[ADDRESS] LIKE @SEARCHVALUE + '%'	
)

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPartyByContact]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GETPARTYBYCONTACT]
GO

CREATE FUNCTION [dbo].[GETPARTYBYCONTACT]
(	
	@SEARCHVALUE	NVarChar(50)	
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT T1.RECID AS PARTY
	FROM 
		LOGISTICSELECTRONICADDRESS T3
		INNER JOIN	DIRPARTYLOCATION T2
			ON T3.LOCATION = T2.LOCATION
		INNER JOIN DIRPARTYTABLE T1
			ON T2.PARTY = T1.RECID
	WHERE
		 T3.VALIDFROM <= GETUTCDATE() AND T3.VALIDTO >= GETUTCDATE() 
		 AND (T3.TYPE = 1 OR T3.TYPE = 2)
		 AND T3.LOCATOR LIKE @SearchValue +'%'
)

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GETPARTYPRIMARYADDRESS]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GETPARTYPRIMARYADDRESS]
GO

CREATE FUNCTION [dbo].[GETPARTYPRIMARYADDRESS] 
(
	@PARTYID		BIGINT
)
RETURNS NVARCHAR(255)
AS
BEGIN
	DECLARE @ADDRESS	NVARCHAR(255)
	
	SET @ADDRESS = (SELECT TOP 1 REPLACE(LPA.[ADDRESS], CHAR(10), ' ')
						FROM DIRPARTYTABLE PT
							INNER JOIN DIRPARTYLOCATION	PL
								ON PT.RECID = PL.PARTY
									AND
									PL.ISPOSTALADDRESS = 1
									AND
									PL.ISPRIMARY = 1
									AND
									PL.ISPRIVATE = 0
									AND
									PL.VALIDFROM <= GETUTCDATE() AND PL.VALIDTO >= GETUTCDATE()
							INNER JOIN	LOGISTICSPOSTALADDRESS LPA
								ON PL.LOCATION = LPA.LOCATION
					WHERE
						PT.RECID = @PARTYID)
	
	RETURN @ADDRESS

END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GETPARTYPRIMARYCONTACT]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GETPARTYPRIMARYCONTACT]
GO

CREATE FUNCTION [dbo].[GETPARTYPRIMARYCONTACT] 
(
	@PARTYID		BIGINT,
	@CONTACTTYPE	INT
)
RETURNS NVARCHAR(255)
AS
BEGIN
	
	DECLARE @LOCATOR		NVARCHAR(255)
	
	SET @LOCATOR = (SELECT TOP 1 LEA.LOCATOR
						FROM DIRPARTYTABLE PT
							INNER JOIN DIRPARTYLOCATION PL
								ON PT.RECID = PL.PARTY
									AND
									PL.ISPOSTALADDRESS = 0
									AND
									PL.ISPRIMARY = 1
									AND
									PL.ISPRIVATE = 0
							INNER JOIN LOGISTICSELECTRONICADDRESS LEA
								ON PL.LOCATION = LEA.LOCATION
									AND
									LEA.VALIDFROM <= GETUTCDATE() AND LEA.VALIDTO >= GETUTCDATE()
									AND
									LEA.TYPE = @CONTACTTYPE
					WHERE
						PT.RECID = @PARTYID)
				
	RETURN @LOCATOR
						
END

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUSTOMERSEARCH]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[CUSTOMERSEARCH]
GO

CREATE FUNCTION [dbo].[CUSTOMERSEARCH]
(
	@SEARCHVALUE	NVARCHAR(50),
	@ORDERBY		NVARCHAR(50),
	@ASCENDING		BIT				= 1,
	@PAGEINDEX		INT				= 1,
	@PAGESIZE		INT				= 200
)
RETURNS @CUSTOMERSEARCHRESULT TABLE (
	ACCOUNTNUMBER				NVARCHAR(20)	PRIMARY KEY,
	ORGID						NVARCHAR(10)	NULL,
	NAME						NVARCHAR(100)	NULL,
	PRIMARYSTREETADDRESS		NVARCHAR(255)	NULL,
	EMAIL						NVARCHAR(255)	NULL,
	PHONE						NVARCHAR(255)	NULL,
	URL							NVARCHAR(255)	NULL,
	ROWNUMBER					INT,
	PARTY						BIGINT)
AS
BEGIN

	DECLARE @ACCOUNTNUMBER				NVARCHAR(20)
	DECLARE @ORGID						NVARCHAR(10)
	DECLARE @NAME						NVARCHAR(100)
	DECLARE @PRIMARYSTREETADDRESS		NVARCHAR(255)
	DECLARE @EMAIL						NVARCHAR(255)
	DECLARE @PHONE						NVARCHAR(255)
	DECLARE @URL						NVARCHAR(255)
	DECLARE @ROWNUMBER					INT
	DECLARE @PARTY						BIGINT
	
	DECLARE @PARTYIDS TABLE (PARTY BIGINT PRIMARY KEY)
	
	INSERT @PARTYIDS
	SELECT T1.PARTY FROM GETPARTYBYCUSTOMER( @SEARCHVALUE) T1
	UNION	
	SELECT T2.PARTY FROM GETPARTYBYADDRESS( @SEARCHVALUE) T2
	UNION
	SELECT T3.PARTY FROM GETPARTYBYCONTACT( @SEARCHVALUE) T3
	
	IF (@ASCENDING = 1)
	BEGIN
		INSERT INTO @CUSTOMERSEARCHRESULT
		(PARTY, ACCOUNTNUMBER, ORGID, NAME, PRIMARYSTREETADDRESS, EMAIL, PHONE, URL, ROWNUMBER)
		SELECT 
		PARTY, ACCOUNTNUM, ORGID, NAME, '', '', '', '', ROWNUM
		FROM 
			(
				SELECT ROW_NUMBER() OVER(ORDER BY
											CASE 
												WHEN @ORDERBY='ACCOUNTNUMBER' THEN T4.ACCOUNTNUM
												WHEN @ORDERBY='ORGID' THEN T4.ORGID
												ELSE T5.Name
											END
											ASC) AS ROWNUM
					, T4.ACCOUNTNUM as ACCOUNTNUM, T4.ORGID AS ORGID, T5.NAME AS NAME, T6.PARTY
				FROM 
					@PARTYIDS T6
				INNER JOIN CUSTTABLE T4
					ON T6.PARTY = T4.PARTY
				INNER JOIN DIRPARTYTABLE T5
					ON T4.PARTY = T5.RECID
			)	
				AS CUSTOMERRESULT
		WHERE
			ROWNUM BETWEEN (@PAGEINDEX - 1) * @PAGESIZE + 1
					AND @PAGEINDEX * @PAGESIZE		
	END					
	ELSE
	BEGIN
		INSERT INTO @CUSTOMERSEARCHRESULT
		(PARTY, ACCOUNTNUMBER, ORGID, NAME, PRIMARYSTREETADDRESS, EMAIL, PHONE, URL, ROWNUMBER)
		SELECT 
		PARTY,ACCOUNTNUM, ORGID, NAME, '', '', '', '', ROWNUM
		FROM 
			(
				SELECT ROW_NUMBER() OVER(ORDER BY
											CASE 
												WHEN @ORDERBY='ACCOUNTNUMBER' THEN T4.ACCOUNTNUM
												WHEN @ORDERBY='ORGID' THEN T4.ORGID
												ELSE T5.Name
											END
											DESC) AS ROWNUM
					, T4.ACCOUNTNUM as ACCOUNTNUM, T4.ORGID AS ORGID, T5.NAME AS NAME, T6.PARTY
				FROM 
					@PARTYIDS T6
				INNER JOIN CUSTTABLE T4
					ON T6.PARTY = T4.PARTY
				INNER JOIN DIRPARTYTABLE T5
					ON T4.PARTY = T5.RECID
			)	
				AS CUSTOMERRESULT
		WHERE
			ROWNUM BETWEEN (@PAGEINDEX - 1) * @PAGESIZE + 1
					AND @PAGEINDEX * @PAGESIZE	
	END
	
	--GET THE ADDRESS AND OTHER DETAILS
	DECLARE RESULTCURSOR CURSOR
	FOR 
		SELECT PARTY, PRIMARYSTREETADDRESS, EMAIL, PHONE FROM @CUSTOMERSEARCHRESULT
	FOR 
	UPDATE OF PRIMARYSTREETADDRESS, EMAIL, PHONE
	
	OPEN RESULTCURSOR
	
	FETCH NEXT FROM RESULTCURSOR INTO @PARTY, @PRIMARYSTREETADDRESS, @EMAIL, @PHONE;
	
	-- GET ADDRESS AND OTHER CONTACT DETAILS ONE BY ONE
	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE @CUSTOMERSEARCHRESULT 
		SET 
			PRIMARYSTREETADDRESS = dbo.GETPARTYPRIMARYADDRESS(@PARTY),
			PHONE = dbo.GETPARTYPRIMARYCONTACT(@PARTY, 1),
			EMAIL = dbo.GETPARTYPRIMARYCONTACT(@PARTY, 2)			
		WHERE CURRENT OF RESULTCURSOR
	
		FETCH NEXT FROM RESULTCURSOR INTO @PARTY, @PRIMARYSTREETADDRESS, @EMAIL, @PHONE;
	END

	CLOSE RESULTCURSOR;
	DEALLOCATE RESULTCURSOR;
	
	RETURN
END

GO