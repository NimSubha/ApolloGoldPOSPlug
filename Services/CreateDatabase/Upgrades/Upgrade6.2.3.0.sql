/*
	Microsoft Dynamics AX for Retail POS Upgrade Database Script
	DbVersion: 6.2.3.0
*/

DROP TRIGGER [dbo].[manualChanges_INVENTTABLE]
GO
DROP TRIGGER [dbo].[manualChanges_INVENTTABLEMODULE]
GO
DROP TRIGGER [dbo].[manualChanges_PRICEDISCTABLE]
GO
DROP TRIGGER [dbo].[manualChanges_TAXTABLE]
GO
DROP TRIGGER [dbo].[manualChanges_TAXDATA]
GO
DROP TRIGGER [dbo].[manualChanges_TAXONITEM]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILSTORETABLE]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILINVENTORY_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILINVENTORYHEADER_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPT_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPTLINE_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPTTAXTRANS_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILTRANSACTIONPAYMENTTRANS_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILZREPORT_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILZREPORTTOTALIZER_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILFISCALPRINTER_BR]
GO
DROP TRIGGER [dbo].[manualChanges_RETAILFISCALPRINTERREPORT_BR]
GO
DROP TRIGGER [dbo].[manualChanges_FISCALESTABLISHMENT_BR]
GO

/****** adding trigger on FISCALESTABLISHMENT_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_FISCALESTABLISHMENT_BR]
	ON  [dbo].[FISCALESTABLISHMENT_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RECIDINS BIGINT
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RECIDDEL BIGINT
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'FISCALESTABLISHMENT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'FISCALESTABLISHMENT_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'FISCALESTABLISHMENT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'FISCALESTABLISHMENT_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'FISCALESTABLISHMENT_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'FISCALESTABLISHMENT_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RECID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RECIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RECIDDEL)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'FISCALESTABLISHMENT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'FISCALESTABLISHMENT_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'FISCALESTABLISHMENT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RECIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on INVENTTABLE to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_INVENTTABLE]
	ON  [dbo].[INVENTTABLE]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @ITEMIDINS NVARCHAR(20)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @ITEMIDDEL NVARCHAR(20)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLE', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLE', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, ITEMID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @ITEMIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @ITEMIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLE' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLE', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @ITEMIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, ITEMID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @ITEMIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT DATAAREAID, ITEMID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @ITEMIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @ITEMIDINS
				SET @PRIMARYKEYDEL = @DATAAREAIDDEL + @ITEMIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLE', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'INVENTTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @ITEMIDDEL
				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @ITEMIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on INVENTTABLEMODULE to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_INVENTTABLEMODULE]
	ON  [dbo].[INVENTTABLEMODULE]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @ITEMIDINS NVARCHAR(20)
	DECLARE @MODULETYPEINS INT
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @ITEMIDDEL NVARCHAR(20)
	DECLARE @MODULETYPEDEL INT
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLEMODULE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLEMODULE', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLEMODULE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLEMODULE', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT ITEMID, MODULETYPE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @ITEMIDINS, @MODULETYPEINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @ITEMIDINS + CONVERT(NVARCHAR, @MODULETYPEINS) + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLEMODULE' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLEMODULE', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @ITEMIDINS, @MODULETYPEINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT ITEMID, MODULETYPE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @ITEMIDINS, @MODULETYPEINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT ITEMID, MODULETYPE, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @ITEMIDDEL, @MODULETYPEDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @ITEMIDINS + CONVERT(NVARCHAR, @MODULETYPEINS) + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = @ITEMIDDEL + CONVERT(NVARCHAR, @MODULETYPEDEL) + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'INVENTTABLEMODULE' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'INVENTTABLEMODULE', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'INVENTTABLEMODULE' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @ITEMIDDEL, @MODULETYPEDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @ITEMIDINS, @MODULETYPEINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on PRICEDISCTABLE to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_PRICEDISCTABLE]
	ON  [dbo].[PRICEDISCTABLE]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RECIDINS BIGINT
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RECIDDEL BIGINT
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'PRICEDISCTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'PRICEDISCTABLE', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'PRICEDISCTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'PRICEDISCTABLE', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'PRICEDISCTABLE' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'PRICEDISCTABLE', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RECID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RECIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RECIDDEL)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'PRICEDISCTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'PRICEDISCTABLE', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'PRICEDISCTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RECIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILSTORETABLE to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILSTORETABLE]
	ON  [dbo].[RETAILSTORETABLE]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RECIDINS BIGINT
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RECIDDEL BIGINT
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILSTORETABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILSTORETABLE', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILSTORETABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILSTORETABLE', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILSTORETABLE' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILSTORETABLE', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RECIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RECID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RECIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RECIDINS)
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RECIDDEL)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILSTORETABLE' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILSTORETABLE', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILSTORETABLE' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RECIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RECIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on TAXDATA to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_TAXDATA]
	ON  [dbo].[TAXDATA]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @TAXCODEINS NVARCHAR(10)
	DECLARE @TAXLIMITMININS NUMERIC(32,16)
	DECLARE @TAXFROMDATEINS DATETIME
	DECLARE @TAXTODATEINS DATETIME
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @RECIDINS BIGINT
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @TAXCODEDEL NVARCHAR(10)
	DECLARE @TAXLIMITMINDEL NUMERIC(32,16)
	DECLARE @TAXFROMDATEDEL DATETIME
	DECLARE @TAXTODATEDEL DATETIME
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @RECIDDEL BIGINT
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXDATA' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXDATA', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXDATA' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXDATA', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXCODE, TAXLIMITMIN, TAXFROMDATE, TAXTODATE, DATAAREAID, RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @TAXLIMITMININS, @TAXFROMDATEINS, @TAXTODATEINS, @DATAAREAIDINS, @RECIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXCODEINS + REPLACE(CONVERT(NVARCHAR, @TAXLIMITMININS), ',', '.') + CONVERT(NVARCHAR, @TAXFROMDATEINS, 126) + CONVERT(NVARCHAR, @TAXTODATEINS, 126) + @DATAAREAIDINS + CONVERT(NVARCHAR, @RECIDINS)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXDATA' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXDATA', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @TAXLIMITMININS, @TAXFROMDATEINS, @TAXTODATEINS, @DATAAREAIDINS, @RECIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXCODE, TAXLIMITMIN, TAXFROMDATE, TAXTODATE, DATAAREAID, RECID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @TAXLIMITMININS, @TAXFROMDATEINS, @TAXTODATEINS, @DATAAREAIDINS, @RECIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT TAXCODE, TAXLIMITMIN, TAXFROMDATE, TAXTODATE, DATAAREAID, RECID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @TAXCODEDEL, @TAXLIMITMINDEL, @TAXFROMDATEDEL, @TAXTODATEDEL, @DATAAREAIDDEL, @RECIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXCODEINS + REPLACE(CONVERT(NVARCHAR, @TAXLIMITMININS), ',', '.') + CONVERT(NVARCHAR, @TAXFROMDATEINS, 126) + CONVERT(NVARCHAR, @TAXTODATEINS, 126) + @DATAAREAIDINS + CONVERT(NVARCHAR, @RECIDINS)
				SET @PRIMARYKEYDEL = @TAXCODEDEL + REPLACE(CONVERT(NVARCHAR, @TAXLIMITMINDEL), ',', '.') + CONVERT(NVARCHAR, @TAXFROMDATEDEL, 126) + CONVERT(NVARCHAR, @TAXTODATEDEL, 126) + @DATAAREAIDDEL + CONVERT(NVARCHAR, @RECIDDEL)

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXDATA' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXDATA', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'TAXDATA' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @TAXCODEDEL, @TAXLIMITMINDEL, @TAXFROMDATEDEL, @TAXTODATEDEL, @DATAAREAIDDEL, @RECIDDEL
				FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @TAXLIMITMININS, @TAXFROMDATEINS, @TAXTODATEINS, @DATAAREAIDINS, @RECIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on TAXONITEM to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_TAXONITEM]
	ON  [dbo].[TAXONITEM]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @TAXITEMGROUPINS NVARCHAR(10)
	DECLARE @TAXCODEINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @TAXITEMGROUPDEL NVARCHAR(10)
	DECLARE @TAXCODEDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXONITEM' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXONITEM', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXONITEM' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXONITEM', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXITEMGROUP, TAXCODE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXITEMGROUPINS, @TAXCODEINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXITEMGROUPINS + @TAXCODEINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXONITEM' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXONITEM', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @TAXITEMGROUPINS, @TAXCODEINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXITEMGROUP, TAXCODE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXITEMGROUPINS, @TAXCODEINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT TAXITEMGROUP, TAXCODE, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @TAXITEMGROUPDEL, @TAXCODEDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXITEMGROUPINS + @TAXCODEINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = @TAXITEMGROUPDEL + @TAXCODEDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXONITEM' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXONITEM', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'TAXONITEM' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @TAXITEMGROUPDEL, @TAXCODEDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @TAXITEMGROUPINS, @TAXCODEINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on TAXTABLE to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_TAXTABLE]
	ON  [dbo].[TAXTABLE]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @TAXCODEINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @TAXCODEDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Commerce Data Exchange Synch Service') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXTABLE', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXTABLE' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXTABLE', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXCODE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXCODEINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXTABLE' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXTABLE', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXCODE, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT TAXCODE, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @TAXCODEDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TAXCODEINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = @TAXCODEDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'TAXTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'TAXTABLE', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'TAXTABLE' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @TAXCODEDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @TAXCODEINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILFISCALPRINTER_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILFISCALPRINTER_BR]
	ON  [dbo].[RETAILFISCALPRINTER_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RESTARTOPERATIONNUMBERINS INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXINS INT
	DECLARE @SERIALNUMBERINS NVARCHAR(20)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RESTARTOPERATIONNUMBERDEL INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXDEL INT
	DECLARE @SERIALNUMBERDEL NVARCHAR(20)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTER_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTER_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ADDITIONALFISCALMEMORYINDEX, SERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @SERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @SERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTER_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTER_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @SERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ADDITIONALFISCALMEMORYINDEX, SERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @SERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ADDITIONALFISCALMEMORYINDEX, SERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @SERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @SERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERDEL) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXDEL) + @SERIALNUMBERDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTER_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILFISCALPRINTER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @SERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @SERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILFISCALPRINTERREPORT_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILFISCALPRINTERREPORT_BR]
	ON  [dbo].[RETAILFISCALPRINTERREPORT_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RESTARTOPERATIONNUMBERINS INT
	DECLARE @RECEIPTNUMBERINS INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXINS INT
	DECLARE @FISCALPRINTERSERIALNUMBERINS NVARCHAR(20)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RESTARTOPERATIONNUMBERDEL INT
	DECLARE @RECEIPTNUMBERDEL INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXDEL INT
	DECLARE @FISCALPRINTERSERIALNUMBERDEL NVARCHAR(20)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTERREPORT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTERREPORT_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTERREPORT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTERREPORT_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, RECEIPTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @RECEIPTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @RECEIPTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @FISCALPRINTERSERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTERREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTERREPORT_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @RECEIPTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, RECEIPTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @RECEIPTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, RECEIPTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @RECEIPTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @FISCALPRINTERSERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @RECEIPTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @FISCALPRINTERSERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERDEL) + CONVERT(NVARCHAR, @RECEIPTNUMBERDEL) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXDEL) + @FISCALPRINTERSERIALNUMBERDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALPRINTERREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALPRINTERREPORT_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILFISCALPRINTERREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @RECEIPTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @FISCALPRINTERSERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @RECEIPTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILFISCALRECEIPT_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPT_BR]
	ON  [dbo].[RETAILFISCALRECEIPT_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @TRANSACTIONIDINS NVARCHAR(44)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @TRANSACTIONIDDEL NVARCHAR(44)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPT_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPT_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPT_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPT_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = @TRANSACTIONIDDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPT_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILFISCALRECEIPT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILFISCALRECEIPTLINE_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPTLINE_BR]
	ON  [dbo].[RETAILFISCALRECEIPTLINE_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @LINENUMINS NUMERIC(32,16)
	DECLARE @TRANSACTIONIDINS NVARCHAR(44)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @LINENUMDEL NUMERIC(32,16)
	DECLARE @TRANSACTIONIDDEL NVARCHAR(44)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTLINE_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTLINE_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTLINE_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTLINE_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTLINE_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTLINE_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = REPLACE(CONVERT(NVARCHAR, @LINENUMDEL), ',', '.') + @TRANSACTIONIDDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTLINE_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTLINE_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILFISCALRECEIPTLINE_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILFISCALRECEIPTTAXTRANS_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILFISCALRECEIPTTAXTRANS_BR]
	ON  [dbo].[RETAILFISCALRECEIPTTAXTRANS_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @taxtypeIns INT
	DECLARE @LINENUMINS NUMERIC(32,16)
	DECLARE @TRANSACTIONIDINS NVARCHAR(44)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @taxtypeDel INT
	DECLARE @LINENUMDEL NUMERIC(32,16)
	DECLARE @TRANSACTIONIDDEL NVARCHAR(44)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTTAXTRANS_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTTAXTRANS_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTTAXTRANS_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTTAXTRANS_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXTYPE, LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @taxtypeIns, @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @taxtypeIns) + REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTTAXTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTTAXTRANS_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @taxtypeIns, @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT TAXTYPE, LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @taxtypeIns, @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT TAXTYPE, LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @taxtypeDel, @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @taxtypeIns) + REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @taxtypeDel) + REPLACE(CONVERT(NVARCHAR, @LINENUMDEL), ',', '.') + @TRANSACTIONIDDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILFISCALRECEIPTTAXTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILFISCALRECEIPTTAXTRANS_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILFISCALRECEIPTTAXTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @taxtypeDel, @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @taxtypeIns, @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILINVENTORY_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILINVENTORY_BR]
	ON  [dbo].[RETAILINVENTORY_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @ITEMIDINS NVARCHAR(20)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @ITEMIDDEL NVARCHAR(20)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORY_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORY_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORY_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORY_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID, ITEMID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS, @ITEMIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @STOREIDINS + @TERMINALIDINS + @ITEMIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORY_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORY_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS, @ITEMIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID, ITEMID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS, @ITEMIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID, ITEMID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @STOREIDDEL, @TERMINALIDDEL, @ITEMIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @STOREIDINS + @TERMINALIDINS + @ITEMIDINS
				SET @PRIMARYKEYDEL = @DATAAREAIDDEL + @STOREIDDEL + @TERMINALIDDEL + @ITEMIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORY_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORY_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILINVENTORY_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @STOREIDDEL, @TERMINALIDDEL, @ITEMIDDEL
				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS, @ITEMIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILINVENTORYHEADER_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILINVENTORYHEADER_BR]
	ON  [dbo].[RETAILINVENTORYHEADER_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORYHEADER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORYHEADER_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORYHEADER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORYHEADER_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @STOREIDINS + @TERMINALIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORYHEADER_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORYHEADER_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT DATAAREAID, STOREID, TERMINALID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @STOREIDDEL, @TERMINALIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @DATAAREAIDINS + @STOREIDINS + @TERMINALIDINS
				SET @PRIMARYKEYDEL = @DATAAREAIDDEL + @STOREIDDEL + @TERMINALIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILINVENTORYHEADER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILINVENTORYHEADER_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILINVENTORYHEADER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @DATAAREAIDDEL, @STOREIDDEL, @TERMINALIDDEL
				FETCH NEXT FROM InsertedCursor INTO @DATAAREAIDINS, @STOREIDINS, @TERMINALIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILTRANSACTIONPAYMENTTRANS_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILTRANSACTIONPAYMENTTRANS_BR]
	ON  [dbo].[RETAILTRANSACTIONPAYMENTTRANS_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @LINENUMINS NUMERIC(32,16)
	DECLARE @TRANSACTIONIDINS NVARCHAR(44)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @LINENUMDEL NUMERIC(32,16)
	DECLARE @TRANSACTIONIDDEL NVARCHAR(44)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILTRANSACTIONPAYMENTTRANS_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILTRANSACTIONPAYMENTTRANS_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILTRANSACTIONPAYMENTTRANS_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILTRANSACTIONPAYMENTTRANS_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILTRANSACTIONPAYMENTTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILTRANSACTIONPAYMENTTRANS_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT LINENUM, TRANSACTIONID, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = REPLACE(CONVERT(NVARCHAR, @LINENUMINS), ',', '.') + @TRANSACTIONIDINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = REPLACE(CONVERT(NVARCHAR, @LINENUMDEL), ',', '.') + @TRANSACTIONIDDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILTRANSACTIONPAYMENTTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILTRANSACTIONPAYMENTTRANS_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILTRANSACTIONPAYMENTTRANS_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @LINENUMDEL, @TRANSACTIONIDDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @LINENUMINS, @TRANSACTIONIDINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILZREPORT_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILZREPORT_BR]
	ON  [dbo].[RETAILZREPORT_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @RESTARTOPERATIONNUMBERINS INT
	DECLARE @ZREPORTNUMBERINS INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXINS INT
	DECLARE @FISCALPRINTERSERIALNUMBERINS NVARCHAR(20)
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @RESTARTOPERATIONNUMBERDEL INT
	DECLARE @ZREPORTNUMBERDEL INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXDEL INT
	DECLARE @FISCALPRINTERSERIALNUMBERDEL NVARCHAR(20)
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORT_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORT_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORT_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @ZREPORTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @FISCALPRINTERSERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORT_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT RESTARTOPERATIONNUMBER, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, FISCALPRINTERSERIALNUMBER, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @ZREPORTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @FISCALPRINTERSERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERINS) + CONVERT(NVARCHAR, @ZREPORTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @FISCALPRINTERSERIALNUMBERINS + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = CONVERT(NVARCHAR, @RESTARTOPERATIONNUMBERDEL) + CONVERT(NVARCHAR, @ZREPORTNUMBERDEL) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXDEL) + @FISCALPRINTERSERIALNUMBERDEL + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORT_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILZREPORT_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @RESTARTOPERATIONNUMBERDEL, @ZREPORTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @FISCALPRINTERSERIALNUMBERDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @RESTARTOPERATIONNUMBERINS, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @FISCALPRINTERSERIALNUMBERINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO

/****** adding trigger on RETAILZREPORTTOTALIZER_BR to track manual database changes for Brazil ******/
CREATE TRIGGER [dbo].[manualChanges_RETAILZREPORTTOTALIZER_BR]
	ON  [dbo].[RETAILZREPORTTOTALIZER_BR]
	AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @APP NVARCHAR(128)

	DECLARE @FISCALPRINTERSERIALNUMBERINS NVARCHAR(20)
	DECLARE @totalIzernameIns NVARCHAR(10)
	DECLARE @ZREPORTNUMBERINS INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXINS INT
	DECLARE @TERMINALIDINS NVARCHAR(10)
	DECLARE @STOREIDINS NVARCHAR(10)
	DECLARE @DATAAREAIDINS NVARCHAR(4)
	DECLARE @PRIMARYKEYINS NVARCHAR(200)

	DECLARE @FISCALPRINTERSERIALNUMBERDEL NVARCHAR(20)
	DECLARE @TOTALIZERNAMEDEL NVARCHAR(10)
	DECLARE @ZREPORTNUMBERDEL INT
	DECLARE @ADDITIONALFISCALMEMORYINDEXDEL INT
	DECLARE @TERMINALIDDEL NVARCHAR(10)
	DECLARE @STOREIDDEL NVARCHAR(10)
	DECLARE @DATAAREAIDDEL NVARCHAR(4)
	DECLARE @PRIMARYKEYDEL NVARCHAR(200)

	SET NOCOUNT ON
	SET @APP = APP_NAME()
	IF (@APP <> 'Microsoft Dynamics AX for Retail POS') AND (@APP <> 'Retail Offline Sync Service')
	BEGIN
		-- delete
		IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS (SELECT * FROM Inserted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORTTOTALIZER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORTTOTALIZER_BR', N'INSORDEL', @APP)
		END
		ELSE
		-- Insert
		IF EXISTS (SELECT * FROM Inserted) AND NOT EXISTS (SELECT * FROM deleted)
		BEGIN
			IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORTTOTALIZER_BR' AND PRIMARYKEY = N'INSORDEL')
				INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORTTOTALIZER_BR', N'INSORDEL', @APP)

			DECLARE InsertedCursor CURSOR
				FOR SELECT FISCALPRINTERSERIALNUMBER, TOTALIZERNAME, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @FISCALPRINTERSERIALNUMBERINS, @totalIzernameIns, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @FISCALPRINTERSERIALNUMBERINS + @totalIzernameIns + CONVERT(NVARCHAR, @ZREPORTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORTTOTALIZER_BR' AND PRIMARYKEY = @PRIMARYKEYINS)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORTTOTALIZER_BR', @PRIMARYKEYINS, @APP)

				FETCH NEXT FROM InsertedCursor INTO @FISCALPRINTERSERIALNUMBERINS, @totalIzernameIns, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
		ELSE
		-- update
		BEGIN
			DECLARE InsertedCursor CURSOR
				FOR SELECT FISCALPRINTERSERIALNUMBER, TOTALIZERNAME, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, TERMINALID, STOREID, DATAAREAID FROM Inserted
			OPEN InsertedCursor
			FETCH NEXT FROM InsertedCursor INTO @FISCALPRINTERSERIALNUMBERINS, @totalIzernameIns, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS

			DECLARE deletedCursor CURSOR
				FOR SELECT FISCALPRINTERSERIALNUMBER, TOTALIZERNAME, ZREPORTNUMBER, ADDITIONALFISCALMEMORYINDEX, TERMINALID, STOREID, DATAAREAID FROM deleted
			OPEN deletedCursor
			FETCH NEXT FROM deletedCursor INTO @FISCALPRINTERSERIALNUMBERDEL, @TOTALIZERNAMEDEL, @ZREPORTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL

			WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @PRIMARYKEYINS = @FISCALPRINTERSERIALNUMBERINS + @totalIzernameIns + CONVERT(NVARCHAR, @ZREPORTNUMBERINS) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXINS) + @TERMINALIDINS + @STOREIDINS + @DATAAREAIDINS
				SET @PRIMARYKEYDEL = @FISCALPRINTERSERIALNUMBERDEL + @TOTALIZERNAMEDEL + CONVERT(NVARCHAR, @ZREPORTNUMBERDEL) + CONVERT(NVARCHAR, @ADDITIONALFISCALMEMORYINDEXDEL) + @TERMINALIDDEL + @STOREIDDEL + @DATAAREAIDDEL

				IF NOT EXISTS (SELECT * FROM [dbo].[RETAILMANUALCHANGESLOG_BR] WHERE TABLENAME = N'RETAILZREPORTTOTALIZER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL)
					INSERT INTO [dbo].[RETAILMANUALCHANGESLOG_BR] VALUES (N'RETAILZREPORTTOTALIZER_BR', @PRIMARYKEYINS, @APP)
				ELSE
					UPDATE [dbo].[RETAILMANUALCHANGESLOG_BR] SET PRIMARYKEY = @PRIMARYKEYINS WHERE TABLENAME = N'RETAILZREPORTTOTALIZER_BR' AND PRIMARYKEY = @PRIMARYKEYDEL

				FETCH NEXT FROM deletedCursor INTO @FISCALPRINTERSERIALNUMBERDEL, @TOTALIZERNAMEDEL, @ZREPORTNUMBERDEL, @ADDITIONALFISCALMEMORYINDEXDEL, @TERMINALIDDEL, @STOREIDDEL, @DATAAREAIDDEL
				FETCH NEXT FROM InsertedCursor INTO @FISCALPRINTERSERIALNUMBERINS, @totalIzernameIns, @ZREPORTNUMBERINS, @ADDITIONALFISCALMEMORYINDEXINS, @TERMINALIDINS, @STOREIDINS, @DATAAREAIDINS
			END

			CLOSE deletedCursor
			DEALLOCATE deletedCursor

			CLOSE InsertedCursor
			DEALLOCATE InsertedCursor
		END
	END
END
GO
